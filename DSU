#include<bits/stdc++.h>
using namespace std;
typedef pair< int , int >PII;
const int MAXN = 1e5+7;

int bap[MAXN], sz[MAXN];
int parent(int u) {
    if (u == bap[u]) return u;
    return parent(bap[u]);
}

bool unite(int u, int v) {
    int cu = parent(u);
    int cv = parent(v);
    if (cu == cv) return false;
    if (sz[cu] < sz[cv]) swap(cu, cv);
    bap[cv] = cu;
    sz[cu] += sz[cv];
    return true;
}



int main() {
    int n;
    cin >> n;

    for (int i = 1; i <= n; i++) {
        bap[i] = i;
        sz[i] = 1;
    }

    vector< PII >redundant;
    for (int i = 1; i < n; i++) {
        int u, v;
        cin >> u >> v;
        if (!unite(u, v)) {
            redundant.emplace_back(u, v);
        }
    }

    vector< int >st;
    for (int i = 1; i <= n; i++) st.push_back(parent(i));
    sort(st.begin(), st.end());
    st.erase(unique(st.begin(), st.end()), st.end());

    cout << redundant.size() << endl;
    for (int i = 0; i < redundant.size(); i++) {
        cout << redundant[i].first << " " << redundant[i].second << " "
                << st[i] << " " << st[i+1] << endl;
    }




    return 0;
}
