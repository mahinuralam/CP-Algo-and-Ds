bool prime[1000000];

void SieveOfEratosthenes(int n)
{
    memset(prime, true, sizeof(prime));
    for (int p = 2; p * p <= n; p++)
    {
        if (prime[p] == true)
        {
            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }
}



int main()
{



    int temp;
    int i, nn, j;

    int n;
    cin>>n;
    ll mm = 123;
    SieveOfEratosthenes(n);
    int m=n;
    vector<int>v;
    while(m!=0)
    {
        ll x = m%10;
        m/=10;
        v.push_back(x);
    }

    for(int i=0; i<v.size(); i++)
    {
        //cout<<v[i]<<" ";
    }
    //cout<<endl;

    for (j = 1; j <= v.size(); j++)
    {
        for (i = 0; i < v.size()-1; i++)
        {
            temp = v[i];
            v[i] = v[i+1];
            v[i+1] = temp;
            string zz;
            for(int i=0; i<v.size(); i++)
            {
                //cout<<v[i]<<" ";

                zz+=to_string(v[i]);
                //cout<<zz<<endl;
            }

            ll pp = stoi(zz);
            cout<<pp<<endl;
            if(prime[pp]==true)
            {
                //cout<<"NOT"<<endl;
            }
            else
            {
                cout<<"PRIME"<<endl;
            }
        }
    }






    return 0;
}
