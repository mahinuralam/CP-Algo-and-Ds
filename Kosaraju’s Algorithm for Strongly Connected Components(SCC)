const ll SZ = 1e6 + 5;
ll vis[SZ];
vector<int> adj[SZ];
stack<ll> st;
vector<ll> transpose[SZ];
vector<pair<ll, ll>> vp;

void topo(int node)
{
    vis[node] = 1;
    for (auto child : adj[node])
    {
        if (vis[child] == 0)
        {
            topo(child);
        }
    }
    st.push(node);
}

void revDfs(ll node)
{
    cout << node << " ";
    vis[node] = 1;
    for (auto it : transpose[node])
    {
        if (!vis[it])
        {
            revDfs(it);
        }
    }
}

void trans(ll m)
{
    memset(vis, 0, sizeof(vis));
    for (int i = 0; i < m; i++)
    {
        transpose[vp[i].second].push_back(vp[i].first);
    }
}
